{"version":3,"sources":["Pages/Home.jsx","App.js","Redux/root-saga.js","Redux/root-reducer.js","Redux/Store.js","index.js"],"names":["Home","App","exact","path","render","props","rootSaga","all","persistconfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","composeWithDevTools","applyMiddleware","run","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"qLAUeA,EARF,WACX,OACE,6CCUWC,MAVf,WACE,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACC,GAAD,OAAU,cAAC,EAAD,eAAUA,Y,4FCNlCC,GAAT,SAASA,IAAT,iEACb,OADa,SACPC,YAAI,IADG,uC,YCGTC,EAAgB,CACpBC,IAAK,OACLC,Q,OAAAA,EACAC,UAAW,IAEPC,EAAcC,0BAAgB,IAIrBC,cAAeN,EAAcI,GCNtCG,EAAiBC,cAEjBC,EAAc,CAACF,GAOd,IAAMG,EAAQC,sBAAYP,EAAaQ,8BAAoBC,kBAAe,WAAf,EAAmBJ,KAErFF,EAAeO,IAAIhB,GAEZ,IAAMiB,EAAYC,YAAaN,GCXtCO,IAASrB,OACP,cAAC,IAAD,CAAUc,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAaK,UAAWA,EAAxB,SACE,cAAC,EAAD,UAING,SAASC,eAAe,W","file":"static/js/main.211af40a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => {\n  return (\n    <div>\n      Home page\n    </div>\n  )\n}\n\nexport default Home\n","import React from \"react\";\nimport {Switch,Route} from 'react-router-dom'\nimport Home from \"./Pages/Home\";\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" render={(props)=> <Home {...props}/> }/>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import {all,call} from 'redux-saga/effects'\n\nexport default function*rootSaga(){\n  yield all([\n\n  ])\n}","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\n\nconst persistconfig = {\n  key: \"root\",\n  storage,\n  whitelist: []\n}\nconst rootReducer = combineReducers({\n\n})\n\nexport default persistReducer(persistconfig,rootReducer)","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nimport rootSaga from \"./root-saga\";\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\n\n// when I use the developement mode, I will use it\nif(process.env.NODE_ENV === \"development\"){\n}\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)))\n\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store)\n\n\nconst value = {store, persistor}\n\nexport default value","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {store,persistor} from './Redux/Store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}